/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ca438038062000ca4833981810160405281019062000037919062000169565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600381905550806004819055506004546003546200009e9190620001f4565b600254620000ad91906200023f565b600581905550600554600681905550436007819055506000600860006101000a81548160ff0219169083151502179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200027a565b600080fd5b6000819050919050565b62000143816200012e565b81146200014f57600080fd5b50565b600081519050620001638162000138565b92915050565b60008060006060848603121562000185576200018462000129565b5b6000620001958682870162000152565b9350506020620001a88682870162000152565b9250506040620001bb8682870162000152565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000201826200012e565b91506200020e836200012e565b92508282026200021e816200012e565b91508282048414831517620002385762000237620001c5565b5b5092915050565b60006200024c826200012e565b915062000259836200012e565b9250828201905080821115620002745762000273620001c5565b5b92915050565b610a1a806200028a6000396000f3fe6080604052600436106100c25760003560e01c806375f12b211161007f5780639d1b464a116100595780639d1b464a1461023b578063d3642a8814610266578063db2e1eed14610291578063dfbf53ae146102bc576100c2565b806375f12b21146101ba5780637b2feaaa146101e55780638e7ea5b214610210576100c2565b806305261aea146100c757806308551a53146100f05780631998aeef1461011b5780631d0806ae146101395780633103ea62146101645780634e69d5601461018f575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610695565b6102e7565b005b3480156100fc57600080fd5b506101056103ad565b6040516101129190610703565b60405180910390f35b6101236103d1565b6040516101309190610703565b60405180910390f35b34801561014557600080fd5b5061014e6105bc565b60405161015b919061072d565b60405180910390f35b34801561017057600080fd5b506101796105c2565b604051610186919061072d565b60405180910390f35b34801561019b57600080fd5b506101a46105c8565b6040516101b19190610763565b60405180910390f35b3480156101c657600080fd5b506101cf6105df565b6040516101dc9190610763565b60405180910390f35b3480156101f157600080fd5b506101fa6105f2565b604051610207919061072d565b60405180910390f35b34801561021c57600080fd5b506102256105f8565b6040516102329190610703565b60405180910390f35b34801561024757600080fd5b50610250610622565b60405161025d919061072d565b60405180910390f35b34801561027257600080fd5b5061027b610628565b604051610288919061072d565b60405180910390f35b34801561029d57600080fd5b506102a661062e565b6040516102b3919061072d565b60405180910390f35b3480156102c857600080fd5b506102d1610634565b6040516102de9190610703565b60405180910390f35b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600860006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a9573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454600754436103e491906107ad565b6103ee91906107e1565b6006546103fb91906107ad565b34101561043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490610880565b60405180910390fd5b600860009054906101000a900460ff161561048d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610484906108ec565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610958565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a3906109c4565b60405180910390fd5b6105b5346102e7565b6000905090565b60055481565b60035481565b6000600860009054906101000a900460ff16905090565b600860009054906101000a900460ff1681565b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b60045481565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b6106728161065f565b811461067d57600080fd5b50565b60008135905061068f81610669565b92915050565b6000602082840312156106ab576106aa61065a565b5b60006106b984828501610680565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ed826106c2565b9050919050565b6106fd816106e2565b82525050565b600060208201905061071860008301846106f4565b92915050565b6107278161065f565b82525050565b6000602082019050610742600083018461071e565b92915050565b60008115159050919050565b61075d81610748565b82525050565b60006020820190506107786000830184610754565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107b88261065f565b91506107c38361065f565b92508282039050818111156107db576107da61077e565b5b92915050565b60006107ec8261065f565b91506107f78361065f565b92508282026108058161065f565b9150828204841483151761081c5761081b61077e565b5b5092915050565b600082825260208201905092915050565b7f426964206973206c6f776572207468616e2063757272656e7450726963650000600082015250565b600061086a601e83610823565b915061087582610834565b602082019050919050565b600060208201905081810360008301526108998161085d565b9050919050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b60006108d6601183610823565b91506108e1826108a0565b602082019050919050565b60006020820190508181036000830152610905816108c9565b9050919050565b7f53656c6c65722063616e6e6f7420626964000000000000000000000000000000600082015250565b6000610942601183610823565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f546865726520697320616c726561647920612077696e6e657200000000000000600082015250565b60006109ae601983610823565b91506109b982610978565b602082019050919050565b600060208201905081810360008301526109dd816109a1565b905091905056fea264697066735822122044b5d68201faf68ba4c8783903d3ea571e244fe8cc7a9ec0444d108a3796806b64736f6c63430008120033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
